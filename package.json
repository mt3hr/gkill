{
  "name": "gkill",
  "version": "1.0.7-dev",
  "private": true,
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "run-p type-check \"build-only {@}\" --",
    "preview": "vite preview",
    "build-only": "vite build",
    "type-check": "vue-tsc --build --force",
    "lint": "eslint . --ext .vue,.js,.jsx,.cjs,.mjs,.ts,.tsx,.cts,.mts --fix --ignore-path .gitignore",
    "go_mod": "rimraf src/app/go.mod && rimraf src/app/go.sum && cd src/app && go mod init github.com/mt3hr/gkill/src/app && cd main/gkill && go mod tidy",
    "go_install": "cd src/app/gkill/main/gkill_server && go install",
    "clean_app_embed": "rimraf src/app/gkill/api/embed/html",
    "copy_dist_to_app_embed": "mkdirp src/app/gkill/api/embed/html && copyfiles -u 1 \"dist/**/*\" src/app/gkill/api/embed/html",
    "prepare_install": "npm run clean_app_embed && npm run build && npm run copy_dist_to_app_embed",
    "build_x_compile": "npm run build_windows_amd64_app && npm run build_windows_amd64 && npm run build_linux_amd64 && npm run build_linux_arm64 && npm run build_linux_arm && npm run build_android_arm && npm run build_android_arm64 && npm run build_android_apk",
    "build_windows_amd64": "unset CC && mkdirp bin/windows_amd64 && cd src/app/gkill/main/gkill_server; CGO_ENABLED=1 GOOS=windows GOARCH=amd64 CC=x86_64-w64-mingw32-gcc go build -o ../../../../../bin/windows_amd64/gkill_server.exe",
    "build_windows_amd64_app": "unset CC && mkdirp bin/windows_amd64 && cd src/app/gkill/main/gkill/; CGO_ENABLED=1 GOOS=windows GOARCH=amd64 CC=x86_64-w64-mingw32-gcc go build -ldflags \"-H windowsgui\" -o ../../../../../bin/windows_amd64/gkill.exe",
    "build_linux_amd64": "unset CC && mkdirp bin/linux_amd64 && cd src/app/gkill/main/gkill_server; CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -o ../../../../../bin/linux_amd64/gkill_server",
    "build_linux_arm64": "unset CC && mkdirp bin/linux_arm64 && cd src/app/gkill/main/gkill_server; CGO_ENABLED=1 GOOS=linux GOARCH=arm64 CC=aarch64-linux-gnu-gcc go build -o ../../../../../bin/linux_arm64/gkill_server",
    "build_linux_arm": "unset CC && mkdirp bin/linux_arm && cd src/app/gkill/main/gkill_server; CGO_ENABLED=1 GOOS=linux GOARCH=arm CC=arm-linux-gnueabihf-gcc go build -o ../../../../../bin/linux_arm/gkill_server",
    "build_android_arm": "unset CC && mkdirp bin/android_arm && cd src/app/gkill/main/gkill_server; CC=$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi21-clang  CGO_ENABLED=1 GOOS=android GOARCH=arm go build -o ../../../../../bin/android_arm/gkill_server",
    "build_android_arm64": "unset CC && mkdirp bin/android_arm64 && cd src/app/gkill/main/gkill_server; CC=$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang  CGO_ENABLED=1 GOOS=android GOARCH=arm64 go build -o ../../../../../bin/android_arm64/gkill_server",
    "copy_android_bin": "copyfiles bin/android_amr64/gkill src/android/app/src/main/assets/",
    "build_android_apk": "mkdirp bin/android_apk && npm run copy_android_bin && cd src/android && gradlew assembleDebug && mv app/build/outputs/apk/debug/app-debug.apk ../../bin/android_apk/gkill.apk",
    "release": "npm run build_x_compile && VERSION=$npm_package_version && 7za a -tzip -mx9 bin/windows_amd64_gkill_${VERSION}.zip bin/windows_amd64/gkill.exe && 7za a -tzip -mx9 bin/windows_amd64_gkill_server_${VERSION}.zip bin/windows_amd64/gkill_server.exe && 7za a -tzip -mx9 bin/linux_amd64_gkill_server_${VERSION}.zip bin/linux_amd64/gkill_server && 7za a -tzip -mx9 bin/linux_arm64_gkill_server_${VERSION}.zip bin/linux_arm64/gkill_server && 7za a -tzip -mx9 bin/linux_arm_gkill_server_${VERSION}.zip bin/linux_arm/gkill_server && 7za a -tzip -mx9 bin/android_arm_gkill_server_${VERSION}.zip bin/android_arm/gkill_server && 7za a -tzip -mx9 bin/android_arm64_gkill_server_${VERSION}.zip bin/android_arm64/gkill_server && cp bin/android_apk/gkill.apk bin/gkill_${VERSION}.apk",
    "install_app": "npm run prepare_install && cd src/app/gkill/main/gkill && go install -ldflags \"-H windowsgui\"",
    "install_server": "npm run prepare_install && npm run go_install"
  },
  "dependencies": {
    "@googlemaps/js-api-loader": "^1.16.8",
    "@mdi/font": "^7.4.47",
    "@mdi/js": "^7.4.47",
    "copyfiles": "^2.4.1",
    "mkdirp": "^3.0.1",
    "moment": "^2.30.1",
    "vue": "^3.4.29",
    "vue-i18n": "^9.14.4",
    "vue-router": "^4.3.3",
    "vue3-google-map": "^0.21.0",
    "vuetify": "^3.6.13-3.7.0-beta.0.0"
  },
  "devDependencies": {
    "@rushstack/eslint-patch": "^1.8.0",
    "@tsconfig/node20": "^20.1.4",
    "@types/google.maps": "^3.58.1",
    "@types/node": "^20.14.5",
    "@vitejs/plugin-vue": "^5.0.5",
    "@vue/eslint-config-typescript": "^13.0.0",
    "@vue/tsconfig": "^0.5.1",
    "eslint": "^8.57.0",
    "eslint-plugin-vue": "^9.23.0",
    "npm-run-all2": "^6.2.0",
    "typescript": "~5.4.0",
    "vite": "^5.3.1",
    "vite-plugin-pwa": "^0.21.1",
    "vite-plugin-vue-devtools": "^7.3.1",
    "vue-tsc": "^2.0.21"
  }
}